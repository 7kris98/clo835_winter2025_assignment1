name: Deploy to AWS ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Manually Set AWS Credentials
      - name: Set AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/config
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "region=us-east-1" >> ~/.aws/config

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 069408709901.dkr.ecr.us-east-1.amazonaws.com

      # Step 4: Build and Push Application Image
      - name: Build and Push Application Image
        env:
          ECR_REGISTRY: 069408709901.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: clo835-assignment1
          IMAGE_TAG: app-v0.1
        run: |
          echo "Building application Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          echo "Pushing application Docker image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 5: Build and Push MySQL Image
      - name: Build and Push MySQL Image
        env:
          ECR_REGISTRY: 069408709901.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: clo835-assignment1
          IMAGE_TAG: mysql-v0.1
        run: |
          echo "Building MySQL Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_mysql .
          echo "Pushing MySQL Docker image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

