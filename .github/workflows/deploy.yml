name: Deploy to AWS ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set AWS Credentials (Include AWS_SESSION_TOKEN)
      - name: Set AWS Credentials
        run: |
          echo "Setting AWS credentials..."
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}
          export AWS_DEFAULT_REGION=us-east-1

      # Step 3: Debug AWS Credentials
      - name: Debug AWS Credentials
        run: |
          echo "Checking AWS credentials..."
          aws sts get-caller-identity || echo "Invalid AWS credentials"

      # Step 4: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 069408709901.dkr.ecr.us-east-1.amazonaws.com

      # Step 5: Build and Push Application Image
      - name: Build and Push Application Image
        env:
          ECR_REGISTRY: 069408709901.dkr.ecr.us-east-1.amazonaws.com/myapp-repo
          ECR_REPOSITORY: myapp-repo
          IMAGE_TAG: app-v0.1
        run: |
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 6: Build and Push MySQL Image
      - name: Build and Push MySQL Image
        env:
          ECR_REGISTRY: 069408709901.dkr.ecr.us-east-1.amazonaws.com/mysql-repo
          ECR_REPOSITORY: mysql-repo
          IMAGE_TAG: mysql-v0.1
        run: |
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_mysql .
          
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
